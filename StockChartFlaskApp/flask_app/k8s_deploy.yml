apiVersion: apps/v1
kind: Deployment
metadata:
  name: stockchartapp
spec:
  replicas: 3
  selector:
    matchLabels:
      whichapp: mystockchartapp
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 120
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        whichapp: mystockchartapp
    spec:
      containers:
      - name: stockchart
        image: kevinmatz/stockchartapp
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: stockchartappservice            # This is the name that will be registered with DNS
spec:
  type: NodePort
  ports:
  - port: 8080              # Listen internally (within the cluster) on port 8080
    nodePort: 30001         # Expose port 30001 for external access
    targetPort: 80          # Tell Kubernetes to forward traffic from nodePort to port 8080 on the Pods
    protocol: TCP
  selector:
    whichapp: mystockchartapp    # Select the Pods that will receive the traffic (only healthy Pods will receive traffic)
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-loadbalancer
spec:
  type: LoadBalancer     # If cluster is on a cloud platform, this will provision one of the cloud platform's load balancers to send traffic to this Service
  ports:
  - port: 9000           # The port that this Service will be listening on
    targetPort: 80       # Forwards traffic to port 8080 on the Pods that match the selector
  selector:
    whichapp: mystockchartapp
